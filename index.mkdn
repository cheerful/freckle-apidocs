---
layout: default
---
Freckle Restful API
===================

You access the Freckle API through the complete account URL:

    https://<account>.letsfreckle.com/api/<resource>

Where *account* is your account name and *resource* is the resource you want to access. Getting all projects from Bill's account would result in the following URL: `https://bill.letsfreckle.com/api/projects.xml`.

Resources are normally accessed through SSL. Some resources can also be access through a regular HTTP request.

Authentication
--------------

An *authentication token* is needed for accessing the API. You can get your personal authentication token from Settings & Tools >> API in the Freckle interface. The token has to be sent for each request in either one of these two ways:

* as query parameter named `token`

  `curl https://myfreckle.letsfreckle.com/api/projects.xml?token=10ee9d50a2f540518c5d1f9448e43f96056af626`

* in the HTTP header `X-FreckleToken`

  `curl -H "X-FreckleToken:10ee9d50a2f540518c5d1f9448e43f96056af626" https://myfreckle.letsfreckle.com/api/projects.xml`

*Note*: To simplify authentication on mobile devices, the token can also be retrieved from `/api/user/api_auth_token`. See the Users section for more information.

Roles
-----

There are currently four roles in Freckle: `administrator`, `owner`, `member`, and `freelancer`. Depending on which of these you are you can access certain parts of the API. For each resource we explain who can access it, and in which way.

API Test Account
----------------

You can use a test account for remote-testing your code. The data from this test account will be regularly wiped, so don't rely on it. Also note that you might not be the only person using this token at a certain time.

Domain: apitest.letsfreckle.com<br>
Token: lx3gi6pxdjtjn57afp8c2bv1me7g89j

*Note*: The data from this test account will be regularly wiped, so don't rely on it.

Data Formats
------------

In the examples XML will be used as data format. However, the API calls will mostly also accept and respond to JSON.

You can get JSON responses by either changing `.xml` in the URLs to `.json` or by sending the `Accept: application/json` header.

Contents
--------

* Entries
  * Fetching time entries
  * Creating a time entry
  * Edit a time entry
  * Remove a time entry
  * Bulk import
* Projects
  * List projects
  * Show project
  * Activate project
  * Archive project
  * Add project
  * Remove project
* Tags
  * List tags
* Users
  * List users
  * Show user
  * Receive a user's avatar
  * Receive a userâ€™s authentication token
  * Add user
  * Update user
  * Remove user
