---
layout: default
---
Freckle Restful API
===================

You access the Freckle API through the complete account URL:

    http://<account>.letsfreckle.com/api/<resource>

Where *account* is your account name and *resource* is the resource you want to access. Getting all projects from Bill's account would result in the following URL: `http://bill.letsfreckle.com/api/projects.xml`.

Some resources can only be accessed through SSL. They shared the same endpoint, only starting with *https*. When you accidentally use the wrong URL, you will get a `302 Found` response.

Authentication
--------------

An *authtoken* is needed for accessing the API. You can get your personal authentication token from Settings & Tools >> API in the Freckle interface. The token has to be sent for each request in either one of these two ways:

* as query parameter named `token`

  `curl http://myfreckle.letsfreckle.com/api/projects.xml?token=10ee9d50a2f540518c5d1f9448e43f96056af626`

* in the HTTP header `X-FreckleToken`

  `curl -H "X-FreckleToken:10ee9d50a2f540518c5d1f9448e43f96056af626" http://myfreckle.letsfreckle.com/api/projects.xml`

*Note*: To simplify authentication on mobile devices, the token can also be retrieved from `/api/user/api_auth_token`. See the Users section for more information.

API Test Account
----------------

You can use a test account for remote-testing your code. The data from this test account will be regularly wiped, so don't rely on it. Also note that you might not be the only person using this token at a certain time.

Domain: apitest.letsfreckle.com<br>
Token: lx3gi6pxdjtjn57afp8c2bv1me7g89j

*Note*: The data from this test account will be regularly wiped, so don't rely on it.

Data Formats
------------

In the examples XML will be used as data format. However, the API calls will mostly also accept and respond to JSON.

You can get JSON responses by either changing `.xml` in the URLs to `.json` or by sending the `Accept: application/json` header.

Contents
--------

* Entries
  * Fetching time entries
  * Creating a Time Entry
  * Bulk Import
* Projects
  * list available projects
* Tags
  * list available tags
* Users
  * list users
  * get user data
  * get api token for a user
  * add user
  * update user
  * deactivate user